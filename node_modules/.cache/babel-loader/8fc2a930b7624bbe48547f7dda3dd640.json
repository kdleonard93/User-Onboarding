{"ast":null,"code":"var _jsxFileName = \"/Users/kyleleonard/Lambda/User-Onboarding/src/components/Form.js\";\nimport React from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as yup from \"yup\";\n\nconst LoginFrom = ({\n  errors,\n  touched,\n  status\n}) => {\n  return React.createElement(\"div\", {\n    className: \"loginForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, touched.name && errors.name && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, errors.name), React.createElement(Field, {\n    type: \"name\",\n    name: \"name\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, errors.password), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, errors.email), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), touched.tos && errors.tos && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, errors.tos), React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"tos\",\n    value: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Submit!\")));\n};\n\nexport default withFormik({\n  mapPropsToValues: values => {\n    return {\n      name: values.name || \"\",\n      password: values.password || \"\",\n      email: values.email || \"\",\n      tos: values.tos || false\n    };\n  },\n  validationSchema: yup.object().shape({\n    name: yup.string().required(),\n    password: yup.string().required(),\n    email: yup.string().required(),\n    tos: yup.boolean().oneOf([true])\n  })\n})(LoginFrom);","map":{"version":3,"sources":["/Users/kyleleonard/Lambda/User-Onboarding/src/components/Form.js"],"names":["React","withFormik","Form","Field","yup","LoginFrom","errors","touched","status","name","password","email","tos","mapPropsToValues","values","validationSchema","object","shape","string","required","boolean","oneOf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as yup from \"yup\";\n\nconst LoginFrom = ({ errors, touched, status }) => {\n  return (\n    <div className=\"loginForm\">\n      <Form>\n        {touched.name && errors.name && <p className=\"error\">{errors.name}</p>}\n        <Field type=\"name\" name=\"name\" placeholder=\"Name\" />\n        {touched.password && errors.password && (\n          <p className=\"error\">{errors.password}</p>\n        )}\n        <Field type=\"password\" name=\"password\" placeholder=\"Password\" />\n        {touched.email && errors.email && (\n          <p className=\"error\">{errors.email}</p>\n        )}\n        <Field type=\"email\" name=\"email\" placeholder=\"Email\" />\n        {touched.tos && errors.tos && <p className=\"error\">{errors.tos}</p>}\n        <Field type=\"checkbox\" name=\"tos\" value=\"false\" />\n        <button>Submit!</button>\n      </Form>\n    </div>\n  );\n};\n\nexport default withFormik({\n  mapPropsToValues: values => {\n    return {\n      name: values.name || \"\",\n      password: values.password || \"\",\n      email: values.email || \"\",\n      tos: values.tos || false\n    };\n  },\n  validationSchema: yup.object().shape({\n    name: yup.string().required(),\n    password: yup.string().required(),\n    email: yup.string().required(),\n    tos: yup.boolean().oneOf([true])\n  })\n})(LoginFrom);\n"]},"metadata":{},"sourceType":"module"}