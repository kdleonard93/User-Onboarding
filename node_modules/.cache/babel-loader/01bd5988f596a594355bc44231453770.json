{"ast":null,"code":"import _slicedToArray from \"/Users/kyleleonard/Lambda/User-Onboarding/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kyleleonard/Lambda/User-Onboarding/src/components/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\n\nconst LoginFrom = ({\n  errors,\n  touched,\n  status\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  useEffect(() => {\n    if (status) {\n      setUser([...user, status]);\n    }\n  }, [status, user]);\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, touched.name && errors.name && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, errors.name), React.createElement(Field, {\n    type: \"name\",\n    name: \"name\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, errors.password), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, errors.email), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), touched.tos && errors.tos && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, errors.tos), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"tos\",\n    value: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Terms of Service\")), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Submit!\"));\n};\n\nexport default withFormik({\n  mapPropsToValues: values => {\n    return {\n      name: values.name || \"\",\n      password: values.password || \"\",\n      email: values.email || \"\",\n      tos: values.tos || false\n    };\n  },\n  validationSchema: yup.object().shape({\n    name: yup.string().required(),\n    password: yup.string().required(),\n    email: yup.string().required(),\n    tos: yup.boolean().oneOf([true], \"Please read Terms of Service\")\n  }),\n  handleSubmit: (values, {\n    setStatus\n  }) => {\n    axios.post(\"https://reqres.in/api/users\", values).then(response => {\n      setStatus(response.data);\n    }).catch(error => {\n      console.log(\"Error:\", error);\n    });\n  }\n})(LoginFrom);","map":{"version":3,"sources":["/Users/kyleleonard/Lambda/User-Onboarding/src/components/Form.js"],"names":["React","useState","useEffect","withFormik","Form","Field","yup","axios","LoginFrom","errors","touched","status","user","setUser","name","password","email","tos","mapPropsToValues","values","validationSchema","object","shape","string","required","boolean","oneOf","handleSubmit","setStatus","post","then","response","data","catch","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\n\nconst LoginFrom = ({ errors, touched, status }) => {\n  const [user, setUser] = useState([]);\n\n  useEffect(() => {\n    if (status) {\n      setUser([...user, status]);\n    }\n  }, [status, user]);\n\n  return (\n    <Form>\n      {touched.name && errors.name && <p className=\"error\">{errors.name}</p>}\n      <Field type=\"name\" name=\"name\" placeholder=\"Name\" />\n      {touched.password && errors.password && (\n        <p className=\"error\">{errors.password}</p>\n      )}\n      <Field type=\"password\" name=\"password\" placeholder=\"Password\" />\n      {touched.email && errors.email && <p className=\"error\">{errors.email}</p>}\n      <Field type=\"email\" name=\"email\" placeholder=\"Email\" />\n      {touched.tos && errors.tos && <p className=\"error\">{errors.tos}</p>}\n      <label>\n        <Field type=\"checkbox\" name=\"tos\" value=\"false\" />\n        <span>Terms of Service</span>\n      </label>\n      <button type=\"button\">Submit!</button>\n    </Form>\n  );\n};\n\nexport default withFormik({\n  mapPropsToValues: values => {\n    return {\n      name: values.name || \"\",\n      password: values.password || \"\",\n      email: values.email || \"\",\n      tos: values.tos || false\n    };\n  },\n  validationSchema: yup.object().shape({\n    name: yup.string().required(),\n    password: yup.string().required(),\n    email: yup.string().required(),\n    tos: yup.boolean().oneOf([true], \"Please read Terms of Service\")\n  }),\n  handleSubmit: (values, { setStatus }) => {\n    axios\n      .post(\"https://reqres.in/api/users\", values)\n      .then(response => {\n        setStatus(response.data);\n      })\n      .catch(error => {\n        console.log(\"Error:\", error);\n      });\n  }\n})(LoginFrom);\n"]},"metadata":{},"sourceType":"module"}